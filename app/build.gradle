apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'io.fabric'
apply from: '../common.gradle'

android {
    flavorDimensions 'platform', 'environment'

    compileSdkVersion compile_sdk_version
    buildToolsVersion build_tools_version

//    signingConfigs {
//        release {
//            keyPassword 'KEY_PWD HERE'
//            storeFile file('../../KEY_STORE_PATH_HERE')
//            storePassword 'STORE_PWD HERE'
//            keyAlias 'KEY_ALIAS HERE'
//        }
//        debug {
//            keyPassword 'KEY_PWD HERE'
//            storeFile file('../../KEY_STORE_PATH_HERE')
//            storePassword 'STORE_PWD HERE'
//            keyAlias 'KEY_ALIAS HERE'
//        }
//    }

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion target_sdk_version
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    productFlavors {
        // *** Platform ***
        pro {
            dimension 'platform'
            applicationId 'com.app.pro'
        }
        lite {
            dimension 'platform'
            applicationId 'com.app.lite'
        }

        // *** Environment ***
        uat {
            dimension 'environment'
            versionName defaultConfig.versionName + "_uat-" + defaultConfig.versionCode
        }
        production {
            dimension 'environment'
            versionName defaultConfig.versionName
        }
    }

    // Filter build variant for some combinations
    variantFilter { variant ->
        def dim = variant.flavors.collectEntries {
            [(it.productFlavor.dimension): it.productFlavor.name]
        }

        if (variant.buildType.name == 'debug') {
            /*if (dim.environment == 'production') {
                // Ignore debug build for production
                variant.setIgnore(true)
            }*/
        } else if (variant.buildType.name == 'beta') {
            if (dim.environment == 'uat') {
                // Ignore beta build for uat
                variant.setIgnore(true)
            }
        } else if (variant.buildType.name == 'release') {
            if (dim.environment == 'uat') {
                // Ignore release build for uat
                variant.setIgnore(true)
            }
        }
    }

    buildTypes {
        debug {
            debuggable true
            jniDebuggable true
            zipAlignEnabled false
            minifyEnabled true
            useProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules_debug.pro'
//            testProguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules_test_debug.pro'
//            testCoverageEnabled true
//            signingConfig signingConfigs.release
            // To disable Fabric - Crashlytics
            buildConfigField "boolean", "USE_CRASHLYTICS", "false"
            ext.enableCrashlytics = false
        }
        beta {
            initWith debug
            // To enable Fabric - Crashlytics
            buildConfigField "boolean", "USE_CRASHLYTICS", "true"
            ext.enableCrashlytics = false
            matchingFallbacks = ['debug']
        }
        release {
            debuggable false
            jniDebuggable false
            zipAlignEnabled true
            minifyEnabled true
            useProguard false
//            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            testProguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules_test_debug.pro'
            // To enable Fabric - Crashlytics
            buildConfigField "boolean", "USE_CRASHLYTICS", "true"
            ext.enableCrashlytics = false
        }
    }

    /*
    * To enable Android Data Binding Library
    * See, https://developer.android.com/topic/libraries/data-binding/index.html
    * */
    dataBinding {
        enabled = true
    }

    testBuildType "debug"
}

// Import all aar lib from '../common_libs'
fileTree(dir: '../common_libs', include: '**/*.aar')
        .each { File file ->
    dependencies.add("implementation", [name: file.name.lastIndexOf('.').with { it != -1 ? file.name[0..<it] : file.name }, ext: 'aar'])
}

dependencies {
    // Other modules
    implementation project(':sdk')

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-$versions.kotlin_env:$versions.kotlin_plugin"

    // Android support libs
    implementation "com.android.support:appcompat-v7:$versions.support_lib"
    implementation "com.android.support:design:$versions.support_lib"
    implementation "com.android.support:cardview-v7:$versions.support_lib"
    implementation "com.android.support.constraint:constraint-layout:$versions.constraint_layout"
    implementation "android.arch.lifecycle:viewmodel:$versions.lifecycle"

    // Retrofit 2
    implementation "com.squareup.retrofit2:retrofit:$versions.retrofit"
    implementation "com.squareup.retrofit2:converter-gson:$versions.retrofit"

    // Picasso
    implementation "com.squareup.picasso:picasso:$versions.picasso"

    // Dagger 2
    implementation "com.google.dagger:dagger:$versions.dagger_2"
    implementation "com.google.dagger:dagger-android:$versions.dagger_2"
    implementation "com.google.dagger:dagger-android-support:$versions.dagger_2"
    kapt "com.google.dagger:dagger-compiler:$versions.dagger_2"
    kapt "com.google.dagger:dagger-android-processor:$versions.dagger_2"

    // Kotlin coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.kotlin_coroutines"

    // RxAndroid
    implementation "io.reactivex.rxjava2:rxandroid:$versions.rx_android"
    implementation "io.reactivex.rxjava2:rxjava:$versions.rx_java"

    // Fabric - Crashlytics lib
    implementation("com.crashlytics.sdk.android:crashlytics:$versions.crashlytics@aar") {
        transitive = true
    }

    // For unit test
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}
